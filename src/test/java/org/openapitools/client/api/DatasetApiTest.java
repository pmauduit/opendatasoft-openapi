/*
 * Explore API
 * The Opendatasoft [Explore API v2](https://help.opendatasoft.com/apis/ods-explore-v2/) is organized around REST. It provides access to all the data available through the platform in a coherent, hierarchical way.  - Only the HTTP `GET` method is supported. - All API endpoints return JSON. - Endpoints are organized in a hierarchical way describing the relative relationship between objects. - All responses contain a list of links allowing easy and relevant navigation through the API endpoints. - All endpoints use the [Opendatasoft Query Language (ODSQL)](https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)). This means that, most of the time, parameters work the same way for all endpoints.
 *
 * The version of the OpenAPI document: V2
 * Contact: support@opendatasoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Dataset;
import org.openapitools.client.model.GetDatasetAttachments200Response;
import org.openapitools.client.model.GetDatasets400Response;
import org.openapitools.client.model.GetDatasets429Response;
import org.openapitools.client.model.GetDatasetsFacets200Response;
import org.openapitools.client.model.Record;
import org.openapitools.client.model.Results;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DatasetApi
 */
@Disabled
public class DatasetApiTest {

    private final DatasetApi api = new DatasetApi();

    /**
     * Export a dataset
     *
     * Export a dataset in the desired format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportRecordsTest() throws ApiException {
        String datasetId = null;
        String format = null;
        String select = null;
        String where = null;
        List<String> orderBy = null;
        Integer limit = null;
        Integer offset = null;
        List<String> refine = null;
        List<String> exclude = null;
        String lang = null;
        String timezone = null;
        api.exportRecords(datasetId, format, select, where, orderBy, limit, offset, refine, exclude, lang, timezone);
        // TODO: test validations
    }

    /**
     * Show dataset information
     *
     * Returns a list of available endpoints for the specified dataset, with metadata and endpoints.  The response includes the following links: * the attachments endpoint * the files endpoint * the records endpoint * the catalog endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDatasetTest() throws ApiException {
        String datasetId = null;
        String select = null;
        String lang = null;
        String timezone = null;
        Dataset response = api.getDataset(datasetId, select, lang, timezone);
        // TODO: test validations
    }

    /**
     * List dataset attachments
     *
     * Returns a list of all available attachments for a dataset. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDatasetAttachmentsTest() throws ApiException {
        String datasetId = null;
        GetDatasetAttachments200Response response = api.getDatasetAttachments(datasetId);
        // TODO: test validations
    }

    /**
     * Read a dataset record
     *
     * Reads a single dataset record based on its identifier. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecordTest() throws ApiException {
        String datasetId = null;
        String recordId = null;
        String select = null;
        String lang = null;
        String timezone = null;
        Record response = api.getRecord(datasetId, recordId, select, lang, timezone);
        // TODO: test validations
    }

    /**
     * Query dataset records
     *
     * Perform a query on dataset records.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecordsTest() throws ApiException {
        String datasetId = null;
        String select = null;
        String where = null;
        String groupBy = null;
        List<String> orderBy = null;
        Integer limit = null;
        Integer offset = null;
        List<String> refine = null;
        List<String> exclude = null;
        String lang = null;
        String timezone = null;
        Results response = api.getRecords(datasetId, select, where, groupBy, orderBy, limit, offset, refine, exclude, lang, timezone);
        // TODO: test validations
    }

    /**
     * List dataset facets
     *
     * Enumerates facet values for records and returns a list of values for each facet. Can be used to implement guided navigation in large result sets. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecordsFacetsTest() throws ApiException {
        String datasetId = null;
        String where = null;
        List<String> refine = null;
        List<String> exclude = null;
        List<String> facet = null;
        String lang = null;
        String timezone = null;
        GetDatasetsFacets200Response response = api.getRecordsFacets(datasetId, where, refine, exclude, facet, lang, timezone);
        // TODO: test validations
    }

}
