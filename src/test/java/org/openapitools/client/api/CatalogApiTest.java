/*
 * Explore API
 * The Opendatasoft [Explore API v2](https://help.opendatasoft.com/apis/ods-explore-v2/) is organized around REST. It provides access to all the data available through the platform in a coherent, hierarchical way.  - Only the HTTP `GET` method is supported. - All API endpoints return JSON. - Endpoints are organized in a hierarchical way describing the relative relationship between objects. - All responses contain a list of links allowing easy and relevant navigation through the API endpoints. - All endpoints use the [Opendatasoft Query Language (ODSQL)](https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)). This means that, most of the time, parameters work the same way for all endpoints.
 *
 * The version of the OpenAPI document: V2
 * Contact: support@opendatasoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetDatasets400Response;
import org.openapitools.client.model.GetDatasets429Response;
import org.openapitools.client.model.GetDatasetsFacets200Response;
import org.openapitools.client.model.ResultsDataset;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CatalogApi
 */
@Disabled
public class CatalogApiTest {

    private final CatalogApi api = new CatalogApi();

    /**
     * Export a catalog
     *
     * Export a catalog in the desired format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportDatasetsTest() throws ApiException {
        String format = null;
        String where = null;
        Integer limit = null;
        Integer offset = null;
        List<String> refine = null;
        List<String> exclude = null;
        String lang = null;
        String timezone = null;
        api.exportDatasets(format, where, limit, offset, refine, exclude, lang, timezone);
        // TODO: test validations
    }

    /**
     * Query catalog datasets
     *
     * Retrieve available datasets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDatasetsTest() throws ApiException {
        String select = null;
        String where = null;
        List<String> orderBy = null;
        Integer limit = null;
        Integer offset = null;
        List<String> refine = null;
        List<String> exclude = null;
        String lang = null;
        String timezone = null;
        ResultsDataset response = api.getDatasets(select, where, orderBy, limit, offset, refine, exclude, lang, timezone);
        // TODO: test validations
    }

    /**
     * List facet values
     *
     * Enumerate facet values for datasets and returns a list of values for each facet. Can be used to implement guided navigation in large result sets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDatasetsFacetsTest() throws ApiException {
        List<String> facet = null;
        List<String> refine = null;
        List<String> exclude = null;
        String where = null;
        String timezone = null;
        GetDatasetsFacets200Response response = api.getDatasetsFacets(facet, refine, exclude, where, timezone);
        // TODO: test validations
    }

}
