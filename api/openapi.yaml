openapi: 3.0.3
info:
  contact:
    email: support@opendatasoft.com
  description: |-
    The Opendatasoft [Explore API v2](https://help.opendatasoft.com/apis/ods-explore-v2/) is organized around REST. It provides access to all the data available through the platform in a coherent, hierarchical way.

    - Only the HTTP `GET` method is supported.
    - All API endpoints return JSON.
    - Endpoints are organized in a hierarchical way describing the relative relationship between objects.
    - All responses contain a list of links allowing easy and relevant navigation through the API endpoints.
    - All endpoints use the [Opendatasoft Query Language (ODSQL)](https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)). This means that, most of the time, parameters work the same way for all endpoints.
  title: Explore API
  version: V2
servers:
- url: https://data.opendatasoft.com/api/v2
security:
- apikey: []
tags:
- description: API to enumerate datasets
  name: Catalog
- description: API to work on records
  name: Dataset
paths:
  /catalog/datasets:
    get:
      description: Retrieve available datasets.
      operationId: getDatasets
      parameters:
      - description: |-
          Examples:
          - `select=size` - Example of select, which only return the "size" field.
          - `select=size * 2 as bigger_size` - Example of a complex expression with a label, which returns a new field named "bigger_size" and containing the double of size field value.

          A select expression can be used to add, remove or change the fields to return.
          An expression can be:
            - a wildcard ('*'): all fields are returned.
            - A field name: only the specified field is returned.
            - An include/exclude function: All fields matching the include or exclude expression are included or excluded. This expression can contain wildcard.
            - A complex expression. The result of the expression is returned. A label can be set for this expression, and in that case, the field will be named after this label.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: |-
          An array of filters.

          A filter is a text expression performing a simple full-text search that can also include logical operations
          (NOT, AND, OR...) and lots of other functions to perform complex and precise search operations.

          For more information, see [Opendatasoft Query Language (ODSQL)](<https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)/Where-clause>) reference documentation.
        explode: true
        in: query
        name: where
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Example: `order_by=sum(age) desc, name asc`

          A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).

          Results are sorted in ascending order by default. To sort results in descending order, use the `desc` keyword.
        explode: false
        in: query
        name: order_by
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Number of items to return.

          To use with the offset parameter to implement pagination.

          Maximum value is 100, to retrieve more than 100 items use the `/export` endpoints.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: -1
          type: integer
        style: form
      - description: |
          Index of the first item to return (starting at 0).

          To use with the limit parameter to implement pagination.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: |-
          Example: `refine=modified:2020` - Return only the value `2020` from the `modified` facet.

          An array of facet filters used to limit the result set.
          Using this parameter, you can refine your query to display only the selected facet value in the response.

          Refinement uses the following syntax: `refine=<FACETNAME>:<FACETVALUE>`

          For date, and other hierarchical facets, when refining on one value, all second-level values related to that entry will appear in facets enumeration. For example, after refining on the year 2019, the related second-level month will appear. And when refining on August 2019, the third-level day will appear.

          **`refine` must not be confused with a `where` filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.**
        explode: true
        in: query
        name: refine
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Examples:
          - `exclude=city:Paris` - Exclude the value `Paris` from the `city` facet. Facets enumeration will display `Paris` as `excluded` without any count information.
          - `exclude=modified:2019/12` - Exclude the value `2019/12` from the `modified` facet. Facets enumeration will display `2020` as `excluded` without any count information.

          An array of facet filters used to exclude a facet value from the result set.
          Using this parameter, you can filter your query to exclude the selected facet value in the response.

          `exclude` uses the following syntax: `exclude=<FACETNAME>:<FACETVALUE>`

          **`exclude` must not be confused with a `where` filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.**
        explode: true
        in: query
        name: exclude
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          A language value.

          If specified, the `lang` value override the default language, which is "fr".
          The language is used to format string, for example in the `date_format` function.
        explode: false
        in: query
        name: lang
        required: false
        schema:
          enum:
          - en
          - fr
          - nl
          - pt
          - it
          - ar
          - de
          - es
          - ca
          - eu
          - sv
          type: string
        style: matrix
      - description: |-
          Set the timezone for datetime fields.

          Timezone IDs are defined by the [Unicode CLDR project](https://github.com/unicode-org/cldr). The list of timezone IDs is available in [timezone.xml](https://github.com/unicode-org/cldr/blob/master/common/bcp47/timezone.xml).
        examples:
          UTC:
            summary: UTC timezone
            value: UTC
          Europe/Paris:
            summary: Paris timezone
            value: Europe/Paris
          US/Eastern:
            summary: Eastern timezone
            value: US/Eastern
          Europe/London:
            summary: London timezone
            value: Europe/London
          Europe/Berlin:
            summary: Berlin timezone
            value: Europe/Berlin
        explode: true
        in: query
        name: timezone
        required: false
        schema:
          default: UTC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                datasets:
                  $ref: '#/components/examples/datasets'
                  value: null
              schema:
                $ref: '#/components/schemas/results_dataset'
          description: A list of available datasets
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid_odsql:
                  value:
                    message: "ODSQL query is malformed: invalid_function() Clause(s)\
                      \ containing the error(s): select."
                    error_code: ODSQLError
              schema:
                $ref: '#/components/schemas/getDatasets_400_response'
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              examples:
                quota_exceeded:
                  value:
                    errorcode: 10002
                    reset_time: 2021-01-26T00:00:00Z
                    limit_time_unit: day
                    call_limit: 10000
                    error: Too many requests on the domain. Please contact the domain
                      administrator.
              schema:
                $ref: '#/components/schemas/getDatasets_429_response'
          description: Too many requests
        "500":
          description: Internal Server Error
      summary: Query catalog datasets
      tags:
      - Catalog
      x-accepts: application/json; charset=utf-8
  /catalog/exports/{format}:
    get:
      description: Export a catalog in the desired format.
      operationId: exportDatasets
      parameters:
      - explode: false
        in: path
        name: format
        required: true
        schema:
          enum:
          - json
          - csv
          - xls
          - rdf
          - ttl
          - data.json
          - rss
          - dcat
          type: string
        style: simple
      - description: |-
          An array of filters.

          A filter is a text expression performing a simple full-text search that can also include logical operations
          (NOT, AND, OR...) and lots of other functions to perform complex and precise search operations.

          For more information, see [Opendatasoft Query Language (ODSQL)](<https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)/Where-clause>) reference documentation.
        explode: true
        in: query
        name: where
        required: false
        schema:
          type: string
        style: form
      - description: |
          Number of items to return in export.

          Use -1 (default) to retrieve all records
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          minimum: -1
          type: integer
        style: form
      - description: |
          Index of the first item to return (starting at 0).

          To use with the limit parameter to implement pagination.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: |-
          Example: `refine=modified:2020` - Return only the value `2020` from the `modified` facet.

          An array of facet filters used to limit the result set.
          Using this parameter, you can refine your query to display only the selected facet value in the response.

          Refinement uses the following syntax: `refine=<FACETNAME>:<FACETVALUE>`

          For date, and other hierarchical facets, when refining on one value, all second-level values related to that entry will appear in facets enumeration. For example, after refining on the year 2019, the related second-level month will appear. And when refining on August 2019, the third-level day will appear.

          **`refine` must not be confused with a `where` filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.**
        explode: true
        in: query
        name: refine
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Examples:
          - `exclude=city:Paris` - Exclude the value `Paris` from the `city` facet. Facets enumeration will display `Paris` as `excluded` without any count information.
          - `exclude=modified:2019/12` - Exclude the value `2019/12` from the `modified` facet. Facets enumeration will display `2020` as `excluded` without any count information.

          An array of facet filters used to exclude a facet value from the result set.
          Using this parameter, you can filter your query to exclude the selected facet value in the response.

          `exclude` uses the following syntax: `exclude=<FACETNAME>:<FACETVALUE>`

          **`exclude` must not be confused with a `where` filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.**
        explode: true
        in: query
        name: exclude
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          A language value.

          If specified, the `lang` value override the default language, which is "fr".
          The language is used to format string, for example in the `date_format` function.
        explode: false
        in: query
        name: lang
        required: false
        schema:
          enum:
          - en
          - fr
          - nl
          - pt
          - it
          - ar
          - de
          - es
          - ca
          - eu
          - sv
          type: string
        style: matrix
      - description: |-
          Set the timezone for datetime fields.

          Timezone IDs are defined by the [Unicode CLDR project](https://github.com/unicode-org/cldr). The list of timezone IDs is available in [timezone.xml](https://github.com/unicode-org/cldr/blob/master/common/bcp47/timezone.xml).
        examples:
          UTC:
            summary: UTC timezone
            value: UTC
          Europe/Paris:
            summary: Paris timezone
            value: Europe/Paris
          US/Eastern:
            summary: Eastern timezone
            value: US/Eastern
          Europe/London:
            summary: London timezone
            value: Europe/London
          Europe/Berlin:
            summary: Berlin timezone
            value: Europe/Berlin
        explode: true
        in: query
        name: timezone
        required: false
        schema:
          default: UTC
          type: string
        style: form
      responses:
        "200":
          description: Return a file
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid_odsql:
                  value:
                    message: "ODSQL query is malformed: invalid_function() Clause(s)\
                      \ containing the error(s): select."
                    error_code: ODSQLError
              schema:
                $ref: '#/components/schemas/getDatasets_400_response'
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              examples:
                quota_exceeded:
                  value:
                    errorcode: 10002
                    reset_time: 2021-01-26T00:00:00Z
                    limit_time_unit: day
                    call_limit: 10000
                    error: Too many requests on the domain. Please contact the domain
                      administrator.
              schema:
                $ref: '#/components/schemas/getDatasets_429_response'
          description: Too many requests
        "500":
          description: Internal Server Error
      summary: Export a catalog
      tags:
      - Catalog
      x-accepts: application/json; charset=utf-8
  /catalog/facets:
    get:
      description: |-
        Enumerate facet values for datasets and returns a list of values for each facet.
        Can be used to implement guided navigation in large result sets.
      operationId: getDatasetsFacets
      parameters:
      - description: |
          A facet is a field used for simple filtering (through the `refine` and `exclude` parameters) or exploration (with the `/facets` endpoint).

          Facets can be configured in the back-office or with this parameter.
        explode: true
        in: query
        name: facet
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Example: `refine=modified:2020` - Return only the value `2020` from the `modified` facet.

          An array of facet filters used to limit the result set.
          Using this parameter, you can refine your query to display only the selected facet value in the response.

          Refinement uses the following syntax: `refine=<FACETNAME>:<FACETVALUE>`

          For date, and other hierarchical facets, when refining on one value, all second-level values related to that entry will appear in facets enumeration. For example, after refining on the year 2019, the related second-level month will appear. And when refining on August 2019, the third-level day will appear.

          **`refine` must not be confused with a `where` filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.**
        explode: true
        in: query
        name: refine
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Examples:
          - `exclude=city:Paris` - Exclude the value `Paris` from the `city` facet. Facets enumeration will display `Paris` as `excluded` without any count information.
          - `exclude=modified:2019/12` - Exclude the value `2019/12` from the `modified` facet. Facets enumeration will display `2020` as `excluded` without any count information.

          An array of facet filters used to exclude a facet value from the result set.
          Using this parameter, you can filter your query to exclude the selected facet value in the response.

          `exclude` uses the following syntax: `exclude=<FACETNAME>:<FACETVALUE>`

          **`exclude` must not be confused with a `where` filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.**
        explode: true
        in: query
        name: exclude
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          An array of filters.

          A filter is a text expression performing a simple full-text search that can also include logical operations
          (NOT, AND, OR...) and lots of other functions to perform complex and precise search operations.

          For more information, see [Opendatasoft Query Language (ODSQL)](<https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)/Where-clause>) reference documentation.
        explode: true
        in: query
        name: where
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Set the timezone for datetime fields.

          Timezone IDs are defined by the [Unicode CLDR project](https://github.com/unicode-org/cldr). The list of timezone IDs is available in [timezone.xml](https://github.com/unicode-org/cldr/blob/master/common/bcp47/timezone.xml).
        examples:
          UTC:
            summary: UTC timezone
            value: UTC
          Europe/Paris:
            summary: Paris timezone
            value: Europe/Paris
          US/Eastern:
            summary: Eastern timezone
            value: US/Eastern
          Europe/London:
            summary: London timezone
            value: Europe/London
          Europe/Berlin:
            summary: Berlin timezone
            value: Europe/Berlin
        explode: true
        in: query
        name: timezone
        required: false
        schema:
          default: UTC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                catalog_facets:
                  $ref: '#/components/examples/catalog_facets'
                  value: null
              schema:
                $ref: '#/components/schemas/getDatasetsFacets_200_response'
          description: An enumeration of facets
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid_odsql:
                  value:
                    message: "ODSQL query is malformed: invalid_function() Clause(s)\
                      \ containing the error(s): select."
                    error_code: ODSQLError
              schema:
                $ref: '#/components/schemas/getDatasets_400_response'
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              examples:
                quota_exceeded:
                  value:
                    errorcode: 10002
                    reset_time: 2021-01-26T00:00:00Z
                    limit_time_unit: day
                    call_limit: 10000
                    error: Too many requests on the domain. Please contact the domain
                      administrator.
              schema:
                $ref: '#/components/schemas/getDatasets_429_response'
          description: Too many requests
        "500":
          description: Internal Server Error
      summary: List facet values
      tags:
      - Catalog
      x-accepts: application/json; charset=utf-8
  /catalog/datasets/{dataset_id}/records:
    get:
      description: Perform a query on dataset records.
      operationId: getRecords
      parameters:
      - description: |-
          The identifier of the dataset to be queried.

          You can find it in the "Information" tab of the dataset page or in the dataset URL, right after `/datasets/`.
        explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Examples:
          - `select=size` - Example of select, which only return the "size" field.
          - `select=size * 2 as bigger_size` - Example of a complex expression with a label, which returns a new field named "bigger_size" and containing the double of size field value.

          A select expression can be used to add, remove or change the fields to return.
          An expression can be:
            - a wildcard ('*'): all fields are returned.
            - A field name: only the specified field is returned.
            - An include/exclude function: All fields matching the include or exclude expression are included or excluded. This expression can contain wildcard.
            - A complex expression. The result of the expression is returned. A label can be set for this expression, and in that case, the field will be named after this label.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: |-
          An array of filters.

          A filter is a text expression performing a simple full-text search that can also include logical operations
          (NOT, AND, OR...) and lots of other functions to perform complex and precise search operations.

          For more information, see [Opendatasoft Query Language (ODSQL)](<https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)/Where-clause>) reference documentation.
        explode: true
        in: query
        name: where
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Example: `group_by='city_field as city'`

          A group by expression defines a grouping function for an aggregation.
          It can be:
           - a field name: group result by each value of this field
           - a range function: group result by range
           - a date function: group result by date

          It is possible to specify a custom name with the 'as name' notation.
        explode: false
        in: query
        name: group_by
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Example: `order_by=sum(age) desc, name asc`

          A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).

          Results are sorted in ascending order by default. To sort results in descending order, use the `desc` keyword.
        explode: false
        in: query
        name: order_by
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Number of items to return.

          To use with the offset parameter to implement pagination.

          Maximum value is 100, to retrieve more than 100 items use the `/export` endpoints.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: -1
          type: integer
        style: form
      - description: |
          Index of the first item to return (starting at 0).

          To use with the limit parameter to implement pagination.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: |-
          Example: `refine=modified:2020` - Return only the value `2020` from the `modified` facet.

          An array of facet filters used to limit the result set.
          Using this parameter, you can refine your query to display only the selected facet value in the response.

          Refinement uses the following syntax: `refine=<FACETNAME>:<FACETVALUE>`

          For date, and other hierarchical facets, when refining on one value, all second-level values related to that entry will appear in facets enumeration. For example, after refining on the year 2019, the related second-level month will appear. And when refining on August 2019, the third-level day will appear.

          **`refine` must not be confused with a `where` filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.**
        explode: true
        in: query
        name: refine
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Examples:
          - `exclude=city:Paris` - Exclude the value `Paris` from the `city` facet. Facets enumeration will display `Paris` as `excluded` without any count information.
          - `exclude=modified:2019/12` - Exclude the value `2019/12` from the `modified` facet. Facets enumeration will display `2020` as `excluded` without any count information.

          An array of facet filters used to exclude a facet value from the result set.
          Using this parameter, you can filter your query to exclude the selected facet value in the response.

          `exclude` uses the following syntax: `exclude=<FACETNAME>:<FACETVALUE>`

          **`exclude` must not be confused with a `where` filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.**
        explode: true
        in: query
        name: exclude
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          A language value.

          If specified, the `lang` value override the default language, which is "fr".
          The language is used to format string, for example in the `date_format` function.
        explode: false
        in: query
        name: lang
        required: false
        schema:
          enum:
          - en
          - fr
          - nl
          - pt
          - it
          - ar
          - de
          - es
          - ca
          - eu
          - sv
          type: string
        style: matrix
      - description: |-
          Set the timezone for datetime fields.

          Timezone IDs are defined by the [Unicode CLDR project](https://github.com/unicode-org/cldr). The list of timezone IDs is available in [timezone.xml](https://github.com/unicode-org/cldr/blob/master/common/bcp47/timezone.xml).
        examples:
          UTC:
            summary: UTC timezone
            value: UTC
          Europe/Paris:
            summary: Paris timezone
            value: Europe/Paris
          US/Eastern:
            summary: Eastern timezone
            value: US/Eastern
          Europe/London:
            summary: London timezone
            value: Europe/London
          Europe/Berlin:
            summary: Berlin timezone
            value: Europe/Berlin
        explode: true
        in: query
        name: timezone
        required: false
        schema:
          default: UTC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                records:
                  $ref: '#/components/examples/records'
                  value: null
                group_by_country:
                  $ref: '#/components/examples/group_by_country'
                  value: null
              schema:
                $ref: '#/components/schemas/results'
          description: Records
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid_odsql:
                  value:
                    message: "ODSQL query is malformed: invalid_function() Clause(s)\
                      \ containing the error(s): select."
                    error_code: ODSQLError
              schema:
                $ref: '#/components/schemas/getDatasets_400_response'
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              examples:
                quota_exceeded:
                  value:
                    errorcode: 10002
                    reset_time: 2021-01-26T00:00:00Z
                    limit_time_unit: day
                    call_limit: 10000
                    error: Too many requests on the domain. Please contact the domain
                      administrator.
              schema:
                $ref: '#/components/schemas/getDatasets_429_response'
          description: Too many requests
        "500":
          description: Internal Server Error
      summary: Query dataset records
      tags:
      - Dataset
      x-accepts: application/json; charset=utf-8
  /catalog/datasets/{dataset_id}/exports/{format}:
    get:
      description: Export a dataset in the desired format.
      operationId: exportRecords
      parameters:
      - description: |-
          The identifier of the dataset to be queried.

          You can find it in the "Information" tab of the dataset page or in the dataset URL, right after `/datasets/`.
        explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: format
        required: true
        schema:
          enum:
          - json
          - geojson
          - shp
          - csv
          - xls
          - jsonl
          - jsonld
          - rdfxml
          - turtle
          - n3
          type: string
        style: simple
      - description: |-
          Examples:
          - `select=size` - Example of select, which only return the "size" field.
          - `select=size * 2 as bigger_size` - Example of a complex expression with a label, which returns a new field named "bigger_size" and containing the double of size field value.

          A select expression can be used to add, remove or change the fields to return.
          An expression can be:
            - a wildcard ('*'): all fields are returned.
            - A field name: only the specified field is returned.
            - An include/exclude function: All fields matching the include or exclude expression are included or excluded. This expression can contain wildcard.
            - A complex expression. The result of the expression is returned. A label can be set for this expression, and in that case, the field will be named after this label.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: |-
          An array of filters.

          A filter is a text expression performing a simple full-text search that can also include logical operations
          (NOT, AND, OR...) and lots of other functions to perform complex and precise search operations.

          For more information, see [Opendatasoft Query Language (ODSQL)](<https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)/Where-clause>) reference documentation.
        explode: true
        in: query
        name: where
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Example: `order_by=sum(age) desc, name asc`

          A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).

          Results are sorted in ascending order by default. To sort results in descending order, use the `desc` keyword.
        explode: false
        in: query
        name: order_by
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Number of items to return in export.

          Use -1 (default) to retrieve all records
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          minimum: -1
          type: integer
        style: form
      - description: |
          Index of the first item to return (starting at 0).

          To use with the limit parameter to implement pagination.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: |-
          Example: `refine=modified:2020` - Return only the value `2020` from the `modified` facet.

          An array of facet filters used to limit the result set.
          Using this parameter, you can refine your query to display only the selected facet value in the response.

          Refinement uses the following syntax: `refine=<FACETNAME>:<FACETVALUE>`

          For date, and other hierarchical facets, when refining on one value, all second-level values related to that entry will appear in facets enumeration. For example, after refining on the year 2019, the related second-level month will appear. And when refining on August 2019, the third-level day will appear.

          **`refine` must not be confused with a `where` filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.**
        explode: true
        in: query
        name: refine
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Examples:
          - `exclude=city:Paris` - Exclude the value `Paris` from the `city` facet. Facets enumeration will display `Paris` as `excluded` without any count information.
          - `exclude=modified:2019/12` - Exclude the value `2019/12` from the `modified` facet. Facets enumeration will display `2020` as `excluded` without any count information.

          An array of facet filters used to exclude a facet value from the result set.
          Using this parameter, you can filter your query to exclude the selected facet value in the response.

          `exclude` uses the following syntax: `exclude=<FACETNAME>:<FACETVALUE>`

          **`exclude` must not be confused with a `where` filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.**
        explode: true
        in: query
        name: exclude
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          A language value.

          If specified, the `lang` value override the default language, which is "fr".
          The language is used to format string, for example in the `date_format` function.
        explode: false
        in: query
        name: lang
        required: false
        schema:
          enum:
          - en
          - fr
          - nl
          - pt
          - it
          - ar
          - de
          - es
          - ca
          - eu
          - sv
          type: string
        style: matrix
      - description: |-
          Set the timezone for datetime fields.

          Timezone IDs are defined by the [Unicode CLDR project](https://github.com/unicode-org/cldr). The list of timezone IDs is available in [timezone.xml](https://github.com/unicode-org/cldr/blob/master/common/bcp47/timezone.xml).
        examples:
          UTC:
            summary: UTC timezone
            value: UTC
          Europe/Paris:
            summary: Paris timezone
            value: Europe/Paris
          US/Eastern:
            summary: Eastern timezone
            value: US/Eastern
          Europe/London:
            summary: London timezone
            value: Europe/London
          Europe/Berlin:
            summary: Berlin timezone
            value: Europe/Berlin
        explode: true
        in: query
        name: timezone
        required: false
        schema:
          default: UTC
          type: string
        style: form
      responses:
        "200":
          description: Return a file
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid_odsql:
                  value:
                    message: "ODSQL query is malformed: invalid_function() Clause(s)\
                      \ containing the error(s): select."
                    error_code: ODSQLError
              schema:
                $ref: '#/components/schemas/getDatasets_400_response'
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              examples:
                quota_exceeded:
                  value:
                    errorcode: 10002
                    reset_time: 2021-01-26T00:00:00Z
                    limit_time_unit: day
                    call_limit: 10000
                    error: Too many requests on the domain. Please contact the domain
                      administrator.
              schema:
                $ref: '#/components/schemas/getDatasets_429_response'
          description: Too many requests
        "500":
          description: Internal Server Error
      summary: Export a dataset
      tags:
      - Dataset
      x-accepts: application/json; charset=utf-8
  /catalog/datasets/{dataset_id}:
    get:
      description: |-
        Returns a list of available endpoints for the specified dataset, with metadata and endpoints.

        The response includes the following links:
        * the attachments endpoint
        * the files endpoint
        * the records endpoint
        * the catalog endpoint.
      operationId: getDataset
      parameters:
      - description: |-
          The identifier of the dataset to be queried.

          You can find it in the "Information" tab of the dataset page or in the dataset URL, right after `/datasets/`.
        explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Examples:
          - `select=size` - Example of select, which only return the "size" field.
          - `select=size * 2 as bigger_size` - Example of a complex expression with a label, which returns a new field named "bigger_size" and containing the double of size field value.

          A select expression can be used to add, remove or change the fields to return.
          An expression can be:
            - a wildcard ('*'): all fields are returned.
            - A field name: only the specified field is returned.
            - An include/exclude function: All fields matching the include or exclude expression are included or excluded. This expression can contain wildcard.
            - A complex expression. The result of the expression is returned. A label can be set for this expression, and in that case, the field will be named after this label.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: |-
          A language value.

          If specified, the `lang` value override the default language, which is "fr".
          The language is used to format string, for example in the `date_format` function.
        explode: false
        in: query
        name: lang
        required: false
        schema:
          enum:
          - en
          - fr
          - nl
          - pt
          - it
          - ar
          - de
          - es
          - ca
          - eu
          - sv
          type: string
        style: matrix
      - description: |-
          Set the timezone for datetime fields.

          Timezone IDs are defined by the [Unicode CLDR project](https://github.com/unicode-org/cldr). The list of timezone IDs is available in [timezone.xml](https://github.com/unicode-org/cldr/blob/master/common/bcp47/timezone.xml).
        examples:
          UTC:
            summary: UTC timezone
            value: UTC
          Europe/Paris:
            summary: Paris timezone
            value: Europe/Paris
          US/Eastern:
            summary: Eastern timezone
            value: US/Eastern
          Europe/London:
            summary: London timezone
            value: Europe/London
          Europe/Berlin:
            summary: Berlin timezone
            value: Europe/Berlin
        explode: true
        in: query
        name: timezone
        required: false
        schema:
          default: UTC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8json:
              examples:
                dataset:
                  $ref: '#/components/examples/dataset'
                  value: null
              schema:
                $ref: '#/components/schemas/dataset'
          description: The dataset
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid_odsql:
                  value:
                    message: "ODSQL query is malformed: invalid_function() Clause(s)\
                      \ containing the error(s): select."
                    error_code: ODSQLError
              schema:
                $ref: '#/components/schemas/getDatasets_400_response'
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              examples:
                quota_exceeded:
                  value:
                    errorcode: 10002
                    reset_time: 2021-01-26T00:00:00Z
                    limit_time_unit: day
                    call_limit: 10000
                    error: Too many requests on the domain. Please contact the domain
                      administrator.
              schema:
                $ref: '#/components/schemas/getDatasets_429_response'
          description: Too many requests
        "500":
          description: Internal Server Error
      summary: Show dataset information
      tags:
      - Dataset
      x-accepts: "application/json; charset=utf-8,application/json; charset=utf-8json"
  /catalog/datasets/{dataset_id}/facets:
    get:
      description: |
        Enumerates facet values for records and returns a list of values for each facet.
        Can be used to implement guided navigation in large result sets.
      operationId: getRecordsFacets
      parameters:
      - description: |-
          The identifier of the dataset to be queried.

          You can find it in the "Information" tab of the dataset page or in the dataset URL, right after `/datasets/`.
        explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          An array of filters.

          A filter is a text expression performing a simple full-text search that can also include logical operations
          (NOT, AND, OR...) and lots of other functions to perform complex and precise search operations.

          For more information, see [Opendatasoft Query Language (ODSQL)](<https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)/Where-clause>) reference documentation.
        explode: true
        in: query
        name: where
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Example: `refine=modified:2020` - Return only the value `2020` from the `modified` facet.

          An array of facet filters used to limit the result set.
          Using this parameter, you can refine your query to display only the selected facet value in the response.

          Refinement uses the following syntax: `refine=<FACETNAME>:<FACETVALUE>`

          For date, and other hierarchical facets, when refining on one value, all second-level values related to that entry will appear in facets enumeration. For example, after refining on the year 2019, the related second-level month will appear. And when refining on August 2019, the third-level day will appear.

          **`refine` must not be confused with a `where` filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.**
        explode: true
        in: query
        name: refine
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Examples:
          - `exclude=city:Paris` - Exclude the value `Paris` from the `city` facet. Facets enumeration will display `Paris` as `excluded` without any count information.
          - `exclude=modified:2019/12` - Exclude the value `2019/12` from the `modified` facet. Facets enumeration will display `2020` as `excluded` without any count information.

          An array of facet filters used to exclude a facet value from the result set.
          Using this parameter, you can filter your query to exclude the selected facet value in the response.

          `exclude` uses the following syntax: `exclude=<FACETNAME>:<FACETVALUE>`

          **`exclude` must not be confused with a `where` filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.**
        explode: true
        in: query
        name: exclude
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          A facet is a field used for simple filtering (through the `refine` and `exclude` parameters) or exploration (with the `/facets` endpoint).

          Facets can be configured in the back-office or with this parameter.
        explode: true
        in: query
        name: facet
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          A language value.

          If specified, the `lang` value override the default language, which is "fr".
          The language is used to format string, for example in the `date_format` function.
        explode: false
        in: query
        name: lang
        required: false
        schema:
          enum:
          - en
          - fr
          - nl
          - pt
          - it
          - ar
          - de
          - es
          - ca
          - eu
          - sv
          type: string
        style: matrix
      - description: |-
          Set the timezone for datetime fields.

          Timezone IDs are defined by the [Unicode CLDR project](https://github.com/unicode-org/cldr). The list of timezone IDs is available in [timezone.xml](https://github.com/unicode-org/cldr/blob/master/common/bcp47/timezone.xml).
        examples:
          UTC:
            summary: UTC timezone
            value: UTC
          Europe/Paris:
            summary: Paris timezone
            value: Europe/Paris
          US/Eastern:
            summary: Eastern timezone
            value: US/Eastern
          Europe/London:
            summary: London timezone
            value: Europe/London
          Europe/Berlin:
            summary: Berlin timezone
            value: Europe/Berlin
        explode: true
        in: query
        name: timezone
        required: false
        schema:
          default: UTC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                facets:
                  $ref: '#/components/examples/facets'
                  value: null
              schema:
                $ref: '#/components/schemas/getDatasetsFacets_200_response'
          description: Facets enumeration
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid_odsql:
                  value:
                    message: "ODSQL query is malformed: invalid_function() Clause(s)\
                      \ containing the error(s): select."
                    error_code: ODSQLError
              schema:
                $ref: '#/components/schemas/getDatasets_400_response'
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              examples:
                quota_exceeded:
                  value:
                    errorcode: 10002
                    reset_time: 2021-01-26T00:00:00Z
                    limit_time_unit: day
                    call_limit: 10000
                    error: Too many requests on the domain. Please contact the domain
                      administrator.
              schema:
                $ref: '#/components/schemas/getDatasets_429_response'
          description: Too many requests
        "500":
          description: Internal Server Error
      summary: List dataset facets
      tags:
      - Dataset
      x-accepts: application/json; charset=utf-8
  /catalog/datasets/{dataset_id}/attachments:
    get:
      description: |
        Returns a list of all available attachments for a dataset.
      operationId: getDatasetAttachments
      parameters:
      - description: |-
          The identifier of the dataset to be queried.

          You can find it in the "Information" tab of the dataset page or in the dataset URL, right after `/datasets/`.
        explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                attachments:
                  $ref: '#/components/examples/attachments'
                  value: null
              schema:
                $ref: '#/components/schemas/getDatasetAttachments_200_response'
          description: List of all available attachments
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid_odsql:
                  value:
                    message: "ODSQL query is malformed: invalid_function() Clause(s)\
                      \ containing the error(s): select."
                    error_code: ODSQLError
              schema:
                $ref: '#/components/schemas/getDatasets_400_response'
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              examples:
                quota_exceeded:
                  value:
                    errorcode: 10002
                    reset_time: 2021-01-26T00:00:00Z
                    limit_time_unit: day
                    call_limit: 10000
                    error: Too many requests on the domain. Please contact the domain
                      administrator.
              schema:
                $ref: '#/components/schemas/getDatasets_429_response'
          description: Too many requests
        "500":
          description: Internal Server Error
      summary: List dataset attachments
      tags:
      - Dataset
      x-accepts: application/json; charset=utf-8
  /catalog/datasets/{dataset_id}/records/{record_id}:
    get:
      description: |
        Reads a single dataset record based on its identifier.
      operationId: getRecord
      parameters:
      - description: |-
          The identifier of the dataset to be queried.

          You can find it in the "Information" tab of the dataset page or in the dataset URL, right after `/datasets/`.
        explode: false
        in: path
        name: dataset_id
        required: true
        schema:
          type: string
        style: simple
      - description: Record identifier
        explode: false
        in: path
        name: record_id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Examples:
          - `select=size` - Example of select, which only return the "size" field.
          - `select=size * 2 as bigger_size` - Example of a complex expression with a label, which returns a new field named "bigger_size" and containing the double of size field value.

          A select expression can be used to add, remove or change the fields to return.
          An expression can be:
            - a wildcard ('*'): all fields are returned.
            - A field name: only the specified field is returned.
            - An include/exclude function: All fields matching the include or exclude expression are included or excluded. This expression can contain wildcard.
            - A complex expression. The result of the expression is returned. A label can be set for this expression, and in that case, the field will be named after this label.
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: |-
          A language value.

          If specified, the `lang` value override the default language, which is "fr".
          The language is used to format string, for example in the `date_format` function.
        explode: false
        in: query
        name: lang
        required: false
        schema:
          enum:
          - en
          - fr
          - nl
          - pt
          - it
          - ar
          - de
          - es
          - ca
          - eu
          - sv
          type: string
        style: matrix
      - description: |-
          Set the timezone for datetime fields.

          Timezone IDs are defined by the [Unicode CLDR project](https://github.com/unicode-org/cldr). The list of timezone IDs is available in [timezone.xml](https://github.com/unicode-org/cldr/blob/master/common/bcp47/timezone.xml).
        examples:
          UTC:
            summary: UTC timezone
            value: UTC
          Europe/Paris:
            summary: Paris timezone
            value: Europe/Paris
          US/Eastern:
            summary: Eastern timezone
            value: US/Eastern
          Europe/London:
            summary: London timezone
            value: Europe/London
          Europe/Berlin:
            summary: Berlin timezone
            value: Europe/Berlin
        explode: true
        in: query
        name: timezone
        required: false
        schema:
          default: UTC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                record:
                  $ref: '#/components/examples/record'
                  value: null
              schema:
                $ref: '#/components/schemas/record'
          description: A single record
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid_odsql:
                  value:
                    message: "ODSQL query is malformed: invalid_function() Clause(s)\
                      \ containing the error(s): select."
                    error_code: ODSQLError
              schema:
                $ref: '#/components/schemas/getDatasets_400_response'
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          content:
            application/json; charset=utf-8:
              examples:
                quota_exceeded:
                  value:
                    errorcode: 10002
                    reset_time: 2021-01-26T00:00:00Z
                    limit_time_unit: day
                    call_limit: 10000
                    error: Too many requests on the domain. Please contact the domain
                      administrator.
              schema:
                $ref: '#/components/schemas/getDatasets_429_response'
          description: Too many requests
        "500":
          description: Internal Server Error
      summary: Read a dataset record
      tags:
      - Dataset
      x-accepts: application/json; charset=utf-8
components:
  examples:
    datasets:
      value:
        total_count: 19
        links: []
        datasets:
        - links: []
          dataset:
            dataset_id: world-administrative-boundaries-countries-and-territories
            dataset_uid: da_6kvv9v
            attachments: []
            has_records: true
            data_visible: true
            fields:
            - annotations: {}
              description: null
              type: geo_point_2d
              name: geo_point_2d
              label: Geo Point
            - annotations: {}
              description: null
              type: geo_shape
              name: geo_shape
              label: Geo Shape
            - description: null
              label: Status
              type: text
              name: status
              annotations:
                facet: []
            - description: ISO 3 code of the country to which the territory belongs
              label: ISO 3 country code
              type: text
              name: color_code
              annotations:
                facet: []
            - description: null
              label: Region of the territory
              type: text
              name: region
              annotations:
                facet: []
            - description: null
              label: ISO 3 territory code
              type: text
              name: iso3
              annotations:
                sortable: []
            - description: null
              label: Continent of the territory
              type: text
              name: continent
              annotations:
                facet: []
            - description: Name of the territory
              label: English Name
              type: text
              name: name
              annotations:
                sortable: []
            - annotations: {}
              description: null
              type: text
              name: iso_3166_1_alpha_2_codes
              label: ISO 3166-1 Alpha 2-Codes
            - annotations: {}
              label: French Name
              type: text
              name: french_short
              description: "French term, when it is available in https://data.opendatasoft.com/explore/dataset/countries-territories-taxonomy-mvp-ct-taxonomy-with-hxl-tags1@public/table/,\
                \ English name otherwise"
            metas:
              default:
                records_count: 256
                modified: 2021-06-23T14:59:57+00:00
                source_domain_address: null
                references: https://geonode.wfp.org/layers/geonode:wld_bnd_adm0_wfp
                keyword:
                - United Nation
                - ISO-3 code
                - Countries
                - Territories
                - Shape
                - Boundaries
                source_domain_title: null
                geographic_reference:
                - world
                timezone: null
                title: World Administrative Boundaries - Countries and Territories
                parent_domain: null
                theme:
                - "Administration, Government, Public finances, Citizenship"
                modified_updates_on_data_change: false
                metadata_processed: 2021-06-23T15:00:02.656000+00:00
                data_processed: 2019-05-15T07:49:01+00:00
                territory:
                - World
                description: "<p>This dataset displays level 0 world administrative\
                  \ boundaries. It contains countries as well as non-sovereign territories\
                  \ (like, for instance, French overseas).\_</p>"
                modified_updates_on_metadata_change: false
                shared_catalog: null
                source_domain: null
                attributions: null
                geographic_area_mode: null
                geographic_reference_auto: true
                geographic_area: null
                publisher: World Food Programme (UN agency)
                language: en
                license: Open Government Licence v3.0
                source_dataset: null
                metadata_languages:
                - en
                oauth_scope: null
                federated: true
                license_url: http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/
            features:
            - analyze
            - geo
        - links: []
          dataset:
            dataset_id: geonames-all-cities-with-a-population-1000
            dataset_uid: da_5m8ykr
            attachments:
            - mimetype: application/zip
              url: odsfile://cities1000.zip
              id: cities1000_zip
              title: cities1000.zip
            has_records: true
            data_visible: true
            fields:
            - description: null
              label: Geoname ID
              type: text
              name: geoname_id
              annotations:
                facetsort:
                - -count
                id: []
            - description: null
              label: Name
              type: text
              name: name
              annotations:
                sortable: []
            - description: null
              label: ASCII Name
              type: text
              name: ascii_name
              annotations: {}
            - description: null
              label: Alternate Names
              type: text
              name: alternate_names
              annotations:
                multivalued:
                - ","
            - description: see http://www.geonames.org/export/codes.html
              label: Feature Class
              type: text
              name: feature_class
              annotations: {}
            - description: see http://www.geonames.org/export/codes.html
              label: Feature Code
              type: text
              name: feature_code
              annotations: {}
            - description: null
              label: Country Code
              type: text
              name: country_code
              annotations: {}
            - description: null
              label: Country name EN
              type: text
              name: cou_name_en
              annotations:
                facet: []
                facetsort:
                - alphanum
                disjunctive: []
            - description: null
              label: Country Code 2
              type: text
              name: country_code_2
              annotations: {}
            - description: null
              label: Admin1 Code
              type: text
              name: admin1_code
              annotations: {}
            - description: null
              label: Admin2 Code
              type: text
              name: admin2_code
              annotations:
                facetsort:
                - -count
            - description: null
              label: Admin3 Code
              type: text
              name: admin3_code
              annotations: {}
            - description: null
              label: Admin4 Code
              type: text
              name: admin4_code
              annotations: {}
            - description: null
              label: Population
              type: int
              name: population
              annotations: {}
            - description: null
              label: Elevation
              type: text
              name: elevation
              annotations: {}
            - description: null
              label: DIgital Elevation Model
              type: int
              name: dem
              annotations: {}
            - description: null
              label: Timezone
              type: text
              name: timezone
              annotations:
                facet: []
                hierarchical:
                - /
            - description: null
              label: Modification date
              type: date
              name: modification_date
              annotations: {}
            - description: null
              label: LABEL EN
              type: text
              name: label_en
              annotations: {}
            - description: null
              label: Coordinates
              type: geo_point_2d
              name: coordinates
              annotations:
                facetsort:
                - -count
            metas:
              default:
                records_count: 137609
                modified: 2021-06-23T14:37:45+00:00
                source_domain_address: null
                references: null
                keyword: null
                source_domain_title: null
                geographic_reference:
                - world
                timezone: null
                title: Geonames - All Cities with a population > 1000
                parent_domain: null
                theme: null
                modified_updates_on_data_change: false
                metadata_processed: 2021-06-23T14:49:23.198000+00:00
                data_processed: 2021-06-23T14:49:23+00:00
                territory:
                - World
                description: null
                modified_updates_on_metadata_change: false
                shared_catalog: null
                source_domain: null
                attributions: null
                geographic_area_mode: null
                geographic_reference_auto: true
                geographic_area: null
                publisher: null
                language: en
                license: null
                source_dataset: null
                metadata_languages:
                - en
                oauth_scope: null
                federated: false
                license_url: null
            features:
            - geo
            - analyze
            - timeserie
    catalog_facets:
      value:
        links: []
        facets:
        - name: publisher
          facets:
          - count: 2
            state: displayed
            name: Opendatasoft
            value: Opendatasoft
          - count: 2
            state: displayed
            name: Opendatasoft - Data Team
            value: Opendatasoft - Data Team
        - name: features
          facets:
          - count: 19
            state: displayed
            name: analyze
            value: analyze
          - count: 13
            state: displayed
            name: timeserie
            value: timeserie
        - name: language
          facets:
          - count: 17
            state: displayed
            name: en
            value: en
          - count: 4
            state: displayed
            name: fr
            value: fr
    records:
      value:
        total_count: 137611
        links: []
        records:
        - links: []
          record:
            id: 53d4524dcb82c676bacd467cd5ace953f2e0389c
            timestamp: 2021-06-22T08:02:59.954Z
            size: 194
            fields:
              admin1_code: "27"
              elevation: null
              name: Saint-Leu
              modification_date: 2019-03-26
              alternate_names:
              - Saint-Leu
              feature_class: P
              admin3_code: "711"
              cou_name_en: France
              coordinates:
                lat: 46.7306
                lon: 4.50083
              country_code_2: null
              geoname_id: "2978771"
              feature_code: PPL
              label_en: France
              dem: 366
              country_code: FR
              ascii_name: Saint-Leu
              timezone: Europe/Paris
              admin2_code: "71"
              admin4_code: "71436"
              population: 29278
        - links: []
          record:
            id: d5251445f329dc74cc5c5e30c95378eb9807a019
            timestamp: 2021-06-22T08:02:59.954Z
            size: 310
            fields:
              admin1_code: "32"
              elevation: null
              name: Saint-Léger-lès-Domart
              modification_date: 2016-02-18
              alternate_names:
              - Saint-Leger
              - Saint-Leger-les-Domart
              - Saint-Léger
              - Saint-Léger-lès-Domart
              feature_class: P
              admin3_code: "802"
              cou_name_en: France
              coordinates:
                lat: 50.05208
                lon: 2.14067
              country_code_2: null
              geoname_id: "2978817"
              feature_code: PPL
              label_en: France
              dem: 31
              country_code: FR
              ascii_name: Saint-Leger-les-Domart
              timezone: Europe/Paris
              admin2_code: "80"
              admin4_code: "80706"
              population: 1781
    group_by_country:
      value:
        links: []
        records:
        - count: 16729
          cou_name_en: United States
        - count: 9945
          cou_name_en: Italy
        - count: 8981
          cou_name_en: Mexico
    dataset:
      value:
        links: []
        dataset:
          dataset_id: geonames-all-cities-with-a-population-1000
          dataset_uid: da_s2n5ed
          attachments: []
          has_records: true
          data_visible: true
          fields:
          - description: null
            label: Geoname ID
            type: text
            name: geoname_id
            annotations:
              facetsort:
              - -count
              id: []
          - description: null
            label: Name
            type: text
            name: name
            annotations:
              sortable: []
          - annotations: {}
            description: null
            type: text
            name: ascii_name
            label: ASCII Name
          - description: null
            label: Alternate Names
            type: text
            name: alternate_names
            annotations:
              multivalued:
              - ","
          - annotations: {}
            label: Feature Class
            type: text
            name: feature_class
            description: see http://www.geonames.org/export/codes.html
          - annotations: {}
            label: Feature Code
            type: text
            name: feature_code
            description: see http://www.geonames.org/export/codes.html
          - annotations: {}
            description: null
            type: text
            name: country_code
            label: Country Code
          - description: null
            label: Country name EN
            type: text
            name: cou_name_en
            annotations:
              facet: []
              facetsort:
              - alphanum
              disjunctive: []
          - annotations: {}
            description: null
            type: text
            name: country_code_2
            label: Country Code 2
          - annotations: {}
            description: null
            type: text
            name: admin1_code
            label: Admin1 Code
          - description: null
            label: Admin2 Code
            type: text
            name: admin2_code
            annotations:
              facetsort:
              - -count
          - annotations: {}
            description: null
            type: text
            name: admin3_code
            label: Admin3 Code
          - annotations: {}
            description: null
            type: text
            name: admin4_code
            label: Admin4 Code
          - annotations: {}
            description: null
            type: int
            name: population
            label: Population
          - annotations: {}
            description: null
            type: text
            name: elevation
            label: Elevation
          - annotations: {}
            description: null
            type: int
            name: dem
            label: DIgital Elevation Model
          - description: null
            label: Timezone
            type: text
            name: timezone
            annotations:
              facet: []
              hierarchical:
              - /
          - annotations: {}
            description: null
            type: date
            name: modification_date
            label: Modification date
          - annotations: {}
            description: null
            type: text
            name: label_en
            label: LABEL EN
          - description: null
            label: Coordinates
            type: geo_point_2d
            name: coordinates
            annotations:
              facetsort:
              - -count
          metas:
            default:
              records_count: 137611
              modified: 2021-06-23T07:50:20+00:00
              source_domain_address: null
              references: https://download.geonames.org/export/dump/
              keyword:
              - Geonames
              - city
              - world
              source_domain_title: null
              geographic_reference:
              - world
              timezone: null
              title: Geonames - All Cities with a population > 1000
              parent_domain: null
              theme:
              - "Administration, Government, Public finances, Citizenship"
              modified_updates_on_data_change: true
              metadata_processed: 2021-06-23T07:50:26.162000+00:00
              data_processed: 2021-06-22T08:47:08+00:00
              territory:
              - World
              description: "<p>All cities with a population &gt; 1000 or seats of\
                \ adm div (ca 80.000)</p><h4>Sources and Contributions</h4><ul><li><strong>Sources</strong>\
                \ : GeoNames is aggregating over hundred different <a href=\"http://www.geonames.org/data-sources.html\"\
                >data sources</a>. \t</li><li><strong>Ambassadors</strong> : <a href=\"\
                http://www.geonames.org/team.html#ambassadors\">GeoNames Ambassadors</a>\
                \ help in many countries. \t</li><li><strong>Wiki</strong> : A <a\
                \ href=\"http://www.geonames.org/manual.html\">wiki</a> allows to\
                \ view the data and quickly fix error and add missing places. \t</li><li><strong>Donations\
                \ and Sponsoring</strong> : Costs for running GeoNames are covered\
                \ by <a href=\"http://www.geonames.org/donations.html\">donations\
                \ and sponsoring</a>.</li></ul><p><b>Enrichment:</b></p><ul><li>add\
                \ country name</li></ul>"
              modified_updates_on_metadata_change: false
              shared_catalog: null
              source_domain: null
              attributions:
              - https://www.geonames.org/about.html
              geographic_area_mode: null
              geographic_reference_auto: true
              geographic_area: null
              publisher: GeoNames
              language: en
              license: CC BY 4.0
              source_dataset: null
              metadata_languages:
              - en
              oauth_scope: null
              federated: true
              license_url: https://creativecommons.org/licenses/by/4.0/
          features:
          - geo
          - analyze
          - timeserie
    facets:
      value:
        links: []
        facets:
        - facets:
          - count: 68888
            state: displayed
            name: Europe
            value: Europe
          - count: 36276
            state: displayed
            name: America
            value: America
          name: timezone
        - facets:
          - count: 313
            state: displayed
            name: Afghanistan
            value: Afghanistan
          - count: 356
            state: displayed
            name: Albania
            value: Albania
          name: cou_name_en
    attachments:
      value:
        links: []
        attachments:
        - href: https://documentation-resources.opendatasoft.com/api/v2/catalog/datasets/geonames-all-cities-with-a-population-1000/attachments/cities1000_zip
          metas:
            mime-type: application/zip
            title: cities1000.zip
    record:
      value:
        links: []
        record:
          id: 5ce430b62d47a400a495c30345fb6fdfac5550f0
          timestamp: 2021-06-23T14:46:05.881Z
          size: 190
          fields:
            timezone: Europe/Brussels
            elevation: null
            name: Fraire
            modification_date: 2020-04-05
            dem: 238
            cou_name_en: Belgium
            feature_class: P
            admin3_code: "93"
            alternate_names:
            - Fraire
            coordinates:
              lat: 50.26127
              lon: 4.5076
            country_code_2: null
            geoname_id: "2798031"
            feature_code: PPL
            label_en: Belgium
            admin4_code: "93088"
            country_code: BE
            ascii_name: Fraire
            admin1_code: WAL
            admin2_code: WNA
            population: 1492
  parameters:
    select:
      description: |-
        Examples:
        - `select=size` - Example of select, which only return the "size" field.
        - `select=size * 2 as bigger_size` - Example of a complex expression with a label, which returns a new field named "bigger_size" and containing the double of size field value.

        A select expression can be used to add, remove or change the fields to return.
        An expression can be:
          - a wildcard ('*'): all fields are returned.
          - A field name: only the specified field is returned.
          - An include/exclude function: All fields matching the include or exclude expression are included or excluded. This expression can contain wildcard.
          - A complex expression. The result of the expression is returned. A label can be set for this expression, and in that case, the field will be named after this label.
      explode: true
      in: query
      name: select
      required: false
      schema:
        type: string
      style: form
    where:
      description: |-
        An array of filters.

        A filter is a text expression performing a simple full-text search that can also include logical operations
        (NOT, AND, OR...) and lots of other functions to perform complex and precise search operations.

        For more information, see [Opendatasoft Query Language (ODSQL)](<https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)/Where-clause>) reference documentation.
      explode: true
      in: query
      name: where
      required: false
      schema:
        type: string
      style: form
    order_by:
      description: |-
        Example: `order_by=sum(age) desc, name asc`

        A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).

        Results are sorted in ascending order by default. To sort results in descending order, use the `desc` keyword.
      explode: false
      in: query
      name: order_by
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    limit:
      description: |
        Number of items to return.

        To use with the offset parameter to implement pagination.

        Maximum value is 100, to retrieve more than 100 items use the `/export` endpoints.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 10
        maximum: 100
        minimum: -1
        type: integer
      style: form
    offset:
      description: |
        Index of the first item to return (starting at 0).

        To use with the limit parameter to implement pagination.
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
    refine:
      description: |-
        Example: `refine=modified:2020` - Return only the value `2020` from the `modified` facet.

        An array of facet filters used to limit the result set.
        Using this parameter, you can refine your query to display only the selected facet value in the response.

        Refinement uses the following syntax: `refine=<FACETNAME>:<FACETVALUE>`

        For date, and other hierarchical facets, when refining on one value, all second-level values related to that entry will appear in facets enumeration. For example, after refining on the year 2019, the related second-level month will appear. And when refining on August 2019, the third-level day will appear.

        **`refine` must not be confused with a `where` filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.**
      explode: true
      in: query
      name: refine
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    exclude:
      description: |-
        Examples:
        - `exclude=city:Paris` - Exclude the value `Paris` from the `city` facet. Facets enumeration will display `Paris` as `excluded` without any count information.
        - `exclude=modified:2019/12` - Exclude the value `2019/12` from the `modified` facet. Facets enumeration will display `2020` as `excluded` without any count information.

        An array of facet filters used to exclude a facet value from the result set.
        Using this parameter, you can filter your query to exclude the selected facet value in the response.

        `exclude` uses the following syntax: `exclude=<FACETNAME>:<FACETVALUE>`

        **`exclude` must not be confused with a `where` filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.**
      explode: true
      in: query
      name: exclude
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    lang:
      description: |-
        A language value.

        If specified, the `lang` value override the default language, which is "fr".
        The language is used to format string, for example in the `date_format` function.
      explode: false
      in: query
      name: lang
      required: false
      schema:
        enum:
        - en
        - fr
        - nl
        - pt
        - it
        - ar
        - de
        - es
        - ca
        - eu
        - sv
        type: string
      style: matrix
    timezone:
      description: |-
        Set the timezone for datetime fields.

        Timezone IDs are defined by the [Unicode CLDR project](https://github.com/unicode-org/cldr). The list of timezone IDs is available in [timezone.xml](https://github.com/unicode-org/cldr/blob/master/common/bcp47/timezone.xml).
      examples:
        UTC:
          summary: UTC timezone
          value: UTC
        Europe/Paris:
          summary: Paris timezone
          value: Europe/Paris
        US/Eastern:
          summary: Eastern timezone
          value: US/Eastern
        Europe/London:
          summary: London timezone
          value: Europe/London
        Europe/Berlin:
          summary: Berlin timezone
          value: Europe/Berlin
      explode: true
      in: query
      name: timezone
      required: false
      schema:
        default: UTC
        type: string
      style: form
    format-catalog:
      explode: false
      in: path
      name: format
      required: true
      schema:
        enum:
        - json
        - csv
        - xls
        - rdf
        - ttl
        - data.json
        - rss
        - dcat
        type: string
      style: simple
    limit_export:
      description: |
        Number of items to return in export.

        Use -1 (default) to retrieve all records
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: -1
        minimum: -1
        type: integer
      style: form
    facet:
      description: |
        A facet is a field used for simple filtering (through the `refine` and `exclude` parameters) or exploration (with the `/facets` endpoint).

        Facets can be configured in the back-office or with this parameter.
      explode: true
      in: query
      name: facet
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    dataset_id:
      description: |-
        The identifier of the dataset to be queried.

        You can find it in the "Information" tab of the dataset page or in the dataset URL, right after `/datasets/`.
      explode: false
      in: path
      name: dataset_id
      required: true
      schema:
        type: string
      style: simple
    group_by:
      description: |-
        Example: `group_by='city_field as city'`

        A group by expression defines a grouping function for an aggregation.
        It can be:
         - a field name: group result by each value of this field
         - a range function: group result by range
         - a date function: group result by date

        It is possible to specify a custom name with the 'as name' notation.
      explode: false
      in: query
      name: group_by
      required: false
      schema:
        type: string
      style: form
    format-datasets:
      explode: false
      in: path
      name: format
      required: true
      schema:
        enum:
        - json
        - geojson
        - shp
        - csv
        - xls
        - jsonl
        - jsonld
        - rdfxml
        - turtle
        - n3
        type: string
      style: simple
    record_id:
      description: Record identifier
      explode: false
      in: path
      name: record_id
      required: true
      schema:
        type: string
      style: simple
  responses:
    bad_request:
      content:
        application/json; charset=utf-8:
          examples:
            invalid_odsql:
              value:
                message: "ODSQL query is malformed: invalid_function() Clause(s) containing\
                  \ the error(s): select."
                error_code: ODSQLError
          schema:
            $ref: '#/components/schemas/getDatasets_400_response'
      description: Bad Request
    quota:
      content:
        application/json; charset=utf-8:
          examples:
            quota_exceeded:
              value:
                errorcode: 10002
                reset_time: 2021-01-26T00:00:00Z
                limit_time_unit: day
                call_limit: 10000
                error: Too many requests on the domain. Please contact the domain
                  administrator.
          schema:
            $ref: '#/components/schemas/getDatasets_429_response'
      description: Too many requests
  schemas:
    links:
      example:
        rel: self
        href: https://openapi-generator.tech
      properties:
        href:
          format: uri
          type: string
        rel:
          enum:
          - self
          - first
          - last
          - next
          - dataset
          - catalog
          type: string
      type: object
    dataset:
      example:
        links:
        - rel: self
          href: https://openapi-generator.tech
        - rel: self
          href: https://openapi-generator.tech
        dataset:
          features:
          - features
          - features
          metas: "{}"
          attachments:
          - mimetype: mimetype
            id: id
            title: title
            url: url
          - mimetype: mimetype
            id: id
            title: title
            url: url
          dataset_id: dataset_id
          dataset_uid: dataset_uid
          additionalProperties: ""
          has_records: true
          fields:
          - name: name
            annotations: "{}"
            description: description
            label: label
            type: type
          - name: name
            annotations: "{}"
            description: description
            label: label
            type: type
          data_visible: true
      properties:
        links:
          items:
            $ref: '#/components/schemas/links'
          type: array
        dataset:
          $ref: '#/components/schemas/dataset_dataset'
      type: object
    results_dataset:
      example:
        total_count: 0
        links:
        - rel: self
          href: https://openapi-generator.tech
        - rel: self
          href: https://openapi-generator.tech
        datasets:
        - links:
          - rel: self
            href: https://openapi-generator.tech
          - rel: self
            href: https://openapi-generator.tech
          dataset:
            features:
            - features
            - features
            metas: "{}"
            attachments:
            - mimetype: mimetype
              id: id
              title: title
              url: url
            - mimetype: mimetype
              id: id
              title: title
              url: url
            dataset_id: dataset_id
            dataset_uid: dataset_uid
            additionalProperties: ""
            has_records: true
            fields:
            - name: name
              annotations: "{}"
              description: description
              label: label
              type: type
            - name: name
              annotations: "{}"
              description: description
              label: label
              type: type
            data_visible: true
        - links:
          - rel: self
            href: https://openapi-generator.tech
          - rel: self
            href: https://openapi-generator.tech
          dataset:
            features:
            - features
            - features
            metas: "{}"
            attachments:
            - mimetype: mimetype
              id: id
              title: title
              url: url
            - mimetype: mimetype
              id: id
              title: title
              url: url
            dataset_id: dataset_id
            dataset_uid: dataset_uid
            additionalProperties: ""
            has_records: true
            fields:
            - name: name
              annotations: "{}"
              description: description
              label: label
              type: type
            - name: name
              annotations: "{}"
              description: description
              label: label
              type: type
            data_visible: true
      properties:
        total_count:
          type: integer
        links:
          items:
            $ref: '#/components/schemas/links'
          type: array
        datasets:
          items:
            $ref: '#/components/schemas/dataset'
          type: array
      type: object
    facet_value_enumeration:
      example:
        name: name
        count: 0
        state: state
        value: value
      properties:
        name:
          type: string
        count:
          type: integer
        value:
          type: string
        state:
          type: string
      type: object
    facet_enumeration:
      example:
        name: name
        facets:
        - name: name
          count: 0
          state: state
          value: value
        - name: name
          count: 0
          state: state
          value: value
      properties:
        name:
          type: string
        facets:
          items:
            $ref: '#/components/schemas/facet_value_enumeration'
          type: array
      type: object
    aggregation:
      properties:
        count:
          type: integer
        cou_name_en:
          type: string
      type: object
    record:
      example:
        record:
          size: 0
          id: id
          fields:
            field1: field1
            field2: 6
          timestamp: timestamp
        links:
        - rel: self
          href: https://openapi-generator.tech
        - rel: self
          href: https://openapi-generator.tech
      properties:
        record:
          $ref: '#/components/schemas/record_record'
        links:
          items:
            $ref: '#/components/schemas/links'
          type: array
      type: object
    results:
      example:
        records:
        - null
        - null
        total_count: 0
        links:
        - rel: self
          href: https://openapi-generator.tech
        - rel: self
          href: https://openapi-generator.tech
      properties:
        total_count:
          type: integer
        links:
          items:
            $ref: '#/components/schemas/links'
          type: array
        records:
          items:
            $ref: '#/components/schemas/results_records_inner'
          type: array
      type: object
    attachment:
      example:
        metas:
          mime-type: mime-type
          id: id
          title: title
          url: url
        href: href
      properties:
        href:
          type: string
        metas:
          $ref: '#/components/schemas/attachment_metas'
      type: object
    getDatasets_400_response:
      description: ""
      properties:
        message:
          minLength: 1
          type: string
        error_code:
          minLength: 1
          type: string
      required:
      - error_code
      - message
      type: object
    getDatasets_429_response:
      description: ""
      properties:
        errorcode:
          type: number
        reset_time:
          minLength: 1
          type: string
        limit_time_unit:
          minLength: 1
          type: string
        call_limit:
          type: number
        error:
          minLength: 1
          type: string
      required:
      - call_limit
      - error
      - errorcode
      - limit_time_unit
      - reset_time
      type: object
    getDatasetsFacets_200_response:
      example:
        links: ""
        facets:
        - name: name
          facets:
          - name: name
            count: 0
            state: state
            value: value
          - name: name
            count: 0
            state: state
            value: value
        - name: name
          facets:
          - name: name
            count: 0
            state: state
            value: value
          - name: name
            count: 0
            state: state
            value: value
      properties:
        links:
          type: array
        facets:
          items:
            $ref: '#/components/schemas/facet_enumeration'
          type: array
      type: object
    getDatasetAttachments_200_response:
      example:
        attachments:
        - metas:
            mime-type: mime-type
            id: id
            title: title
            url: url
          href: href
        - metas:
            mime-type: mime-type
            id: id
            title: title
            url: url
          href: href
        links:
        - rel: self
          href: https://openapi-generator.tech
        - rel: self
          href: https://openapi-generator.tech
      properties:
        links:
          items:
            $ref: '#/components/schemas/links'
          type: array
        attachments:
          items:
            $ref: '#/components/schemas/attachment'
          type: array
      type: object
    dataset_dataset_attachments_inner:
      example:
        mimetype: mimetype
        id: id
        title: title
        url: url
      properties:
        mimetype:
          type: string
        url:
          type: string
        id:
          type: string
        title:
          type: string
      type: object
    dataset_dataset_fields_inner:
      example:
        name: name
        annotations: "{}"
        description: description
        label: label
        type: type
      properties:
        name:
          type: string
        label:
          type: string
        type:
          type: string
        annotations:
          type: object
        description:
          nullable: true
          type: string
      type: object
    dataset_dataset:
      example:
        features:
        - features
        - features
        metas: "{}"
        attachments:
        - mimetype: mimetype
          id: id
          title: title
          url: url
        - mimetype: mimetype
          id: id
          title: title
          url: url
        dataset_id: dataset_id
        dataset_uid: dataset_uid
        additionalProperties: ""
        has_records: true
        fields:
        - name: name
          annotations: "{}"
          description: description
          label: label
          type: type
        - name: name
          annotations: "{}"
          description: description
          label: label
          type: type
        data_visible: true
      properties:
        dataset_id:
          type: string
        dataset_uid:
          readOnly: true
          type: string
        attachments:
          items:
            $ref: '#/components/schemas/dataset_dataset_attachments_inner'
          type: array
        has_records:
          type: boolean
        data_visible:
          type: boolean
        features:
          description: |
            A map of available features for a dataset, with the fields they apply to.
          items:
            type: string
          type: array
        metas:
          type: object
        fields:
          items:
            $ref: '#/components/schemas/dataset_dataset_fields_inner'
          type: array
        additionalProperties: {}
      type: object
    record_record_fields:
      additionalProperties: {}
      example:
        field1: field1
        field2: 6
      properties:
        field1:
          type: string
        field2:
          type: integer
      type: object
    record_record:
      example:
        size: 0
        id: id
        fields:
          field1: field1
          field2: 6
        timestamp: timestamp
      properties:
        id:
          type: string
        timestamp:
          format: dateTime
          type: string
        size:
          format: int64
          type: integer
        fields:
          $ref: '#/components/schemas/record_record_fields'
      type: object
    results_records_inner:
      oneOf:
      - $ref: '#/components/schemas/aggregation'
      - $ref: '#/components/schemas/record'
    attachment_metas:
      example:
        mime-type: mime-type
        id: id
        title: title
        url: url
      properties:
        mime-type:
          type: string
        title:
          type: string
        url:
          type: string
        id:
          type: string
      type: object
  securitySchemes:
    apikey:
      description: API key to make authenticated requests.
      in: query
      name: apikey
      type: apiKey

